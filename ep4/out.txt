MAC0121 2019 - EP4
Pitao (Nov  5 2019, 10:21:21)
[GCC 8.3.0] on linux
Linha 0: #---------------------------------------------- 

Linha 1: # teste com constantes

Linha 2: _1          # menos unario
-1.000000

Linha 3: 2 + 5 * 3
17.000000

Linha 4: (2 + 5)*3
21.000000

Linha 5: 2 - _5      # == 2 + 5  
7.000000

Linha 6: 2 ** 2 ** 3 # == 256, precedencia e da direira para a esquerda
256.000000

Linha 7: (2 **2)** 3 # ==64 
64.000000

Linha 8: 2.2 * 3
6.600000

Linha 9: 7 / 2.3
3.043478

Linha 10: 7 % 2.3
0.100000

Linha 11: 7 // 2.3
3.000000

Linha 12: 17 // 3
5.000000

Linha 13: 1 < 2
1.000000

Linha 14: 1 > 2
0.000000

Linha 15: 2 <= 2
1.000000

Linha 16: 2 >= 2
1.000000

Linha 17: 2 < 3 and 3 < 4
1.000000

Linha 18: not (2 < 3 and 3 < 4)
0.000000

Linha 19: 2 < 3 or  4 > 3
1.000000

Linha 20: 1.1 != 1.1
0.000000

Linha 21: 1.1 == 1.1
1.000000

Linha 22: 2 != 2.1
1.000000

Linha 23: 

Linha 24: #---------------------------------------------- 

Linha 25: # testes com variaveis 

Linha 26: a = 4
4.000000

Linha 27: b = _3
-3.000000

Linha 28: c = a + b
1.000000

Linha 29: a
4.000000

Linha 30: b
-3.000000

Linha 31: c
1.000000

Linha 32: a < c
0.000000

Linha 33: a > c 
1.000000

Linha 34: a < c or a >= c      # sempre verdade
1.000000

Linha 35: not(a < c or a >= c) # sempre falso
0.000000

Linha 36: a = b = c = 5
5.000000

Linha 37: a
5.000000

Linha 38: b
5.000000

Linha 39: c
5.000000

Linha 40: d = (a + b) / c
2.000000

Linha 41: 

Linha 42: #----------------------------------------------

Linha 43: # mais este com variaveis

Linha 44: A = 2
2.000000

Linha 45: A 
2.000000

Linha 46: B = 3.1 + A
5.100000

Linha 47: B
5.100000

Linha 48: D = 2*A + B/2
6.550000

Linha 49: D
6.550000

Linha 50: C = D = A = B + A / 3.2 / A 
5.412500

Linha 51: A
5.412500

Linha 52: B
5.100000

Linha 53: C
5.412500

Linha 54: D
5.412500

Linha 55: A = B + (C = D + 1) # em Python nao existe esse tipo de atribuicao do C
11.512500

Linha 56: A
11.512500

Linha 57: B
5.100000

Linha 58: C
6.412500

Linha 59: D
5.412500

Linha 60: 

Linha 61: #------------------------------------------------

Linha 62: # mais teste ainda

Linha 63: A = 1
1.000000

Linha 64: A = (B = A + 1) * 3 ** not 2 ** 2  # Vixe! O que e isso?
2.000000

Linha 65: B
2.000000

Linha 66: A
2.000000

Linha 67: prova1 = 5.0
5.000000

Linha 68: prova2 = 6.2
6.200000

Linha 69: prova3 = 3.2
3.200000

Linha 70: mp = (prova1 + 2*prova2 + 2*prova3) / 5
4.760000

Linha 71: mp
4.760000

Linha 72: mep = 4.0
4.000000

Linha 73: mep
4.000000

Linha 74: mp >= 5 
0.000000

Linha 75: mep >= 5
0.000000

Linha 76: aprovado = mp >= 5 and mep >= 5
0.000000

Linha 77: aprovado
0.000000

Linha 78: var1 = (var2 = (var3 = (var4 = (var5 = 0) + 1) + 1) + 1) + 1 # :-)
4.000000

Linha 79: var1
4.000000

Linha 80: var2
3.000000

Linha 81: var3
2.000000

Linha 82: var4
1.000000

Linha 83: var5
0.000000

